
/*
 * 
 */

package com.fusesource.test.mtom;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Progress FUSE Services Framework 2.2.11-fuse-00-00
 * Tue Mar 10 11:32:40 IST 2015
 * Generated source version: 2.2.11-fuse-00-00
 * 
 */


@WebServiceClient(name = "MtomTestService", 
                  wsdlLocation = "file:/NotBackedUp/cpandey/Development/FUSE-WORKSPACES/sparks/fuse-demos/Camel-CXF-MTOM/mtom-service/src/main/resources/wsdl/test.wsdl",
                  targetNamespace = "http://www.fusesource.com/test/mtom") 
public class MtomTestService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.fusesource.com/test/mtom", "MtomTestService");
    public final static QName Mtom = new QName("http://www.fusesource.com/test/mtom", "mtom");
    static {
        URL url = null;
        try {
            url = new URL("file:/NotBackedUp/cpandey/Development/FUSE-WORKSPACES/sparks/fuse-demos/Camel-CXF-MTOM/mtom-service/src/main/resources/wsdl/test.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/NotBackedUp/cpandey/Development/FUSE-WORKSPACES/sparks/fuse-demos/Camel-CXF-MTOM/mtom-service/src/main/resources/wsdl/test.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public MtomTestService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MtomTestService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MtomTestService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public MtomTestService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public MtomTestService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MtomTestService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MtomTest
     */
    @WebEndpoint(name = "mtom")
    public MtomTest getMtom() {
        return super.getPort(Mtom, MtomTest.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MtomTest
     */
    @WebEndpoint(name = "mtom")
    public MtomTest getMtom(WebServiceFeature... features) {
        return super.getPort(Mtom, MtomTest.class, features);
    }

}
